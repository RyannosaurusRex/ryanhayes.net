{"expireTime":9007200859288004000,"key":"transformer-remark-markdown-html-4937868d2ae228bdf45e586daa8c67d0-gatsby-remark-embed-gistgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-abbrgatsby-remark-imagesgatsby-remark-prismjs-","val":"<p>Today I was setting up an automated build using TeamCity and came across an issue where the build of the solution kept failing.  The only reason that was given was this:</p>\n<blockquote>\n<p>[MSBuild output] CSC : fatal error CS2008: No inputs specified</p>\n</blockquote>\n<p>Turns out that <strong>MSBuild actually fails the whole build when you’re running it from the command line like this if there’s not a file that it can build</strong>.  The project in question was actually just full of XML and configuration files that other projects referenced and got published with a NuGet package to our private feed.  <strong>To fix it, I just added a simple .cs file, so that MSBuild had something to do.  🙂</strong></p>\n<p>Here’s the code:</p>\n<p>[syntax type=“html|php|js|css”]</p>\n<p>using System;<br>\nusing System.Collections.Generic;<br>\nusing System.Linq;<br>\nusing System.Text;</p>\n<p>namespace Configuration<br>\n{<br>\nclass MSBuildBugFix<br>\n{<br>\n// MSBuild has a bug where if no source files are found, the build fails when<br>\n// running from the commandline (or in our case, TeamCity). This file is only here<br>\n// to allow the build to complete.<br>\n}<br>\n}</p>\n<p>[/syntax]</p>\n<p> </p>"}